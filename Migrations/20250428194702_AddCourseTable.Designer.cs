// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ObsBackend.Data;

#nullable disable

namespace obsproject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250428194702_AddCourseTable")]
    partial class AddCourseTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CourseAnnouncement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ExamMessage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InstructorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CourseAnnouncements");
                });

            modelBuilder.Entity("ObsBackend.Model.Course", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<int>("InstructorId")
                        .HasColumnType("integer")
                        .HasColumnName("instructorId");

                    b.Property<string>("LectureName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("lectureName");

                    b.HasKey("Code");

                    b.HasIndex("InstructorId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("ObsBackend.Model.ExamAnnouncement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ExamId")
                        .HasColumnType("integer")
                        .HasColumnName("examId");

                    b.Property<string>("Message")
                        .HasColumnType("text")
                        .HasColumnName("message");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("ExamAnnouncements");
                });

            modelBuilder.Entity("ObsBackend.Model.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Instructor", (string)null);
                });

            modelBuilder.Entity("ObsBackend.Model.Kurs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("InstructorId")
                        .HasColumnType("integer")
                        .HasColumnName("instructorId");

                    b.Property<string>("LectureName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("lectureName");

                    b.HasKey("Id");

                    b.HasIndex("InstructorId");

                    b.ToTable("Kurslar");
                });

            modelBuilder.Entity("ObsBackend.Model.LetterGrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Course")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("course");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("grade");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer")
                        .HasColumnName("studentId");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("LetterGrade");
                });

            modelBuilder.Entity("ObsBackend.Model.ResitExam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("courseCode");

                    b.Property<int?>("KursId")
                        .HasColumnType("integer");

                    b.Property<int>("LecturerId")
                        .HasColumnType("integer")
                        .HasColumnName("lecturerId");

                    b.HasKey("Id");

                    b.HasIndex("CourseCode");

                    b.HasIndex("KursId");

                    b.HasIndex("LecturerId");

                    b.ToTable("ResitExams");
                });

            modelBuilder.Entity("ObsBackend.Model.UploadExamSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UploadExamSchedules");
                });

            modelBuilder.Entity("ObsBackend.Model.UploadGradeRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UploadGradeRequests");
                });

            modelBuilder.Entity("ObsBackend.Model.UploadResitExam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UploadResitExams");
                });

            modelBuilder.Entity("ObsBackend.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("ObsBackend.Model.Secretary", b =>
                {
                    b.HasBaseType("ObsBackend.Model.User");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("surname");

                    b.Property<int>("id")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.ToTable("Secretary");
                });

            modelBuilder.Entity("ObsBackend.Model.Student", b =>
                {
                    b.HasBaseType("ObsBackend.Model.User");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("department");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("surname");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("ObsBackend.Model.Course", b =>
                {
                    b.HasOne("ObsBackend.Model.Instructor", "Instructor")
                        .WithMany("Courses")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("ObsBackend.Model.ExamAnnouncement", b =>
                {
                    b.HasOne("ObsBackend.Model.ResitExam", "ResitExam")
                        .WithMany()
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResitExam");
                });

            modelBuilder.Entity("ObsBackend.Model.Kurs", b =>
                {
                    b.HasOne("ObsBackend.Model.Instructor", "Instructor")
                        .WithMany("Kurslar")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("ObsBackend.Model.LetterGrade", b =>
                {
                    b.HasOne("ObsBackend.Model.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ObsBackend.Model.ResitExam", b =>
                {
                    b.HasOne("ObsBackend.Model.Course", "Course")
                        .WithMany("ResitExams")
                        .HasForeignKey("CourseCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObsBackend.Model.Kurs", null)
                        .WithMany("ResitExams")
                        .HasForeignKey("KursId");

                    b.HasOne("ObsBackend.Model.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("ObsBackend.Model.Secretary", b =>
                {
                    b.HasOne("ObsBackend.Model.User", null)
                        .WithOne()
                        .HasForeignKey("ObsBackend.Model.Secretary", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ObsBackend.Model.Student", b =>
                {
                    b.HasOne("ObsBackend.Model.User", null)
                        .WithOne()
                        .HasForeignKey("ObsBackend.Model.Student", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ObsBackend.Model.Course", b =>
                {
                    b.Navigation("ResitExams");
                });

            modelBuilder.Entity("ObsBackend.Model.Instructor", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Kurslar");
                });

            modelBuilder.Entity("ObsBackend.Model.Kurs", b =>
                {
                    b.Navigation("ResitExams");
                });
#pragma warning restore 612, 618
        }
    }
}
